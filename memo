

●sqlplus上でshow arraysizeを実行すると、一度にフェッチする行数を表示できる。
　フェッチ行数をデフォルトの15から変更したい場合は、set arraysize 100 などのように調整する。

●ログインプロファイルの作成
ログインする度に毎回設定するようなコマンドがあれば、手間が省けてよい。
SQL*Plus 接続時に実行されるコマンドファイルで、サイトプロファイル用の
glogin.sql と、ユーザプロファイル用の login.sql の2種類ある。
vim $ORACLE_HOME/sqlplus/admin/glogin.sql

●SQL文の実行の前にexplain forをつけるとアクセスパスの解析結果を表示する。
このとき、SQL文自体は実行されない。


●結果の表示方法
sqlplus -sでサイレントモード(実行時のsqlplusのバージョン情報の出力なし)
set feedback off で何件の結果が得られたなどの結果豊国を抑止する。
set echo onとすれば、逆に実行時に打ったsqlが表示される。

●/を押すと、直前に実行したSQL文が再実行される。

●コメントは/* */の間に記述する。

●データベースの状態を表示するためのSQL文(shutdownの時は何も表示されない。)
select host_name, instance_name, status from v$instance;

●テーブルのリネーム
alter table ＜変更前テーブル名＞ rename to ＜変更後テーブル名＞；

●テーブルの先頭5行を表示するSQL
/home/oracle/LDLIB/sqlplus -s sys/oracle@orcl12c as sysdba  << EOF
select rowid,rownum, name from test where rownum < 10;
EOF

●表領域は以下のディレクトリに格納されている。(
IOちらつかせたいなら、自身が作成する表領域は別のデバイスに作成するのがよい??)
/u01/app/oracle/oradata/orcl12c/orcl/

●bigfile表領域のメリット
ビッグ・ファイル表領域では、スモール・ファイル表領域のデータ・ファイルの最大サイズと比較して1000倍も大きなデータ・ファイルを作成することが可能。ビッグ・ファイル表領域に含まれるデータ・ファイルを1つに限定することで、従来のスモール・ファイル表領域で複数のデータ・ファイルを識別する為に使用していた10bitをブロック番号へ流用することが可能（22bit + 10bit = 32 bit）なため。

●ORA-65096: 共通ユーザーまたはロール名が無効です
そしてCDBとPDBには下記のルールがあります。
・通常のローカル接続（11gR2までと同じように接続）した場合、CDBに接続される。
・CDBにはユーザスキーマを作成することはできない。（ORA-65096となる）
・NユーザスキーマはPDBに接続して作成する必要がある。
・CDBからはユーザスキーマが見えない。

●ユーザが作成した表がどの表領域に格納されているかを調べるためのSQL
col TABLE_NAME format a20
col TABLESPACE_NAME format a20
select TABLE_NAME, TABLESPACE_NAME from USER_TABLES;

●しばちょ02でtryユーザを作成済み
現状create session 権限とcreate table権限を付与済み

●テスト用テーブル作成SQL文

●性能の解析に用いるv$sqlの情報
## memo ⇒ v$sqlの
#SQL_TEXT       SQLの先頭1000bytes
#SORTS  SORTの回数
#FETCHES        FETCHの回数
#EXECUTIONS     実行回数
#USERS_EXECUTING        現在実行中のユーザー数
#PARSE_CALLS    解析コールの回数
#DISK_READS     ディスク読み込み数
#BUFFER_GETS    バッファ読み込み数
#ROWS_PROCESSED SQLが戻す行数
#CPU_TIME       処理に使用したCPU時間（マイクロ秒）
#ELAPSED_TIME   処理に使用した経過時間（マイクロ秒）
#ADDRESS        ほかのViewとの結合に使用
#HASH_VALUE     ほかのViewとの結合に使用

●性能の解析に用いるv$sql_plan
OBJECT_NAME	実行計画中の表、索引名
OPERATION	実行計画オペレーション
OPTIONS	実行計画オペレーションのオプション
OPTIMIZER	オプティマイザのモード
DEPTH	実行計画のTreeの深さ
ADDRESS	ほかのViewとの結合に使用
HASH_VALUE	ほかのViewとの結合に使用

●出力を簡素にするオプション

set echo off
set feedback off
set heading off
set trimspool on
set timing off
set time off
set pages 0
set long 2000000000
set linesize 50000

●シェルでシングルクォートをエスケープする方法
'  ⇒  '\''
アクセスパスのシェルに渡したいなら以下のように記述
./accessPath.sh 'select name from test where name = '\''aaa'\'';'

●bashrcに加えた変更。これでgithubのユーザ認証を簡単にできる。
##ADDED
#PS1='\[\e[36m\][\u@tokusato \[\e[33m\]\t\[\e[31m]' ⇒ 数字は色を表現
PS1='\[[\u@tokusato \[\e \t \W\]]'

●AUTOTRACE機能の有効化
http://www.atmarkit.co.jp/ait/articles/0410/21/news098_4.html
ロールの作成
@$ORACLE_HOME/sqlplus/admin/plustrce.sql
ロールの付与
grant plustrace to sys;
オートトレース用のテーブルを作成する。
@$ORACLE_HOME/rdbms/admin/utlxplan.sql
SET AUTOTRACE TRACEONLY

※sysユーザだと検索に失敗する。
select * from test;
SP2-0612: Error generating AUTOTRACE report

tryユーザだとうまく統計情報が出力された。
出力は以下のように
#############################################################################
SET AUTOTRACE TRACEONLY
select * from test;

Elapsed: 00:00:00.03

Execution Plan
----------------------------------------------------------
Plan hash value: 1357081020

--------------------------------------------------------------------------
| Id  | Operation         | Name | Rows  | Bytes | Cost (%CPU)| Time     |
--------------------------------------------------------------------------
|   0 | SELECT STATEMENT  |      |     2 |    90 |     3   (0)| 00:00:01 |
|   1 |  TABLE ACCESS FULL| TEST |     2 |    90 |     3   (0)| 00:00:01 |
--------------------------------------------------------------------------

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)


Statistics
----------------------------------------------------------
         18  recursive calls
         13  db block gets
         27  consistent gets
          0  physical reads
       2028  redo size
        674  bytes sent via SQL*Net to client
        607  bytes received via SQL*Net from client
          2  SQL*Net roundtrips to/from client
          0  sorts (memory)
          0  sorts (disk)
          2  rows processed
#############################################################################









